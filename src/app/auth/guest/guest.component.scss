@use "src/scss/utils.scss" as *;

main,
.content,
.component-content {
  display: grid;
}

main {
  place-content: center;
  --original-color: var(--color-accent-100);
  --desired-color: var(--color-accent-50);
  overflow: clip;
}

.container {
  --free-space-around-view: #{free-space("sm")};
  width: min(calc(100vw - (var(--free-space-around-view) * 2)), 420px);
}

.go-back-button {
  &-wrapper {
    padding: {
      top: free-space("xs");
      bottom: free-space("xs");
    }
  }
}

.content {
  --min-value-break: 0.5rem;
  --max-value-break: 2.5vh;
  --break-between-elements: max(var(--min-value-break), var(--max-value-break));

  grid-template-rows: 1fr auto;
  row-gap: var(--break-between-elements);
  padding-bottom: var(--break-between-elements);
  margin-bottom: var(--free-space-around-view);
}

%loading-state {
  display: grid;
  place-content: center;
}

.loading-state-register {
  @extend %loading-state;
  min-height: 630px;
}

.loading-state-login {
  @extend %loading-state;
  min-height: 400px;
}

.loading-defer-spinner {
  --size: max(var(--h1) * 1.5, 7.5vmin);
  width: var(--size) !important;
  height: var(--size) !important;
  margin: {
    left: auto;
    right: auto;
  }
}

.component-content {
  row-gap: var(--break-between-elements);
  align-content: center;
  justify-items: center;
}

.login-register {
  &-switch > a {
    text-align: center;
    text-decoration: none;
    font-size: var(--p);
    font-weight: 500;
    cursor: pointer;
    color: inherit;
  }
}
